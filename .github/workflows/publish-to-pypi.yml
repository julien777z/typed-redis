name: Publish to PyPI

on:
  workflow_dispatch:
    inputs:
      version_increment:
        description: Version increment type
        required: true
        type: choice
        default: patch
        options:
          - patch
          - minor
          - major

permissions:
  contents: write
  id-token: write

jobs:
  publish:
    name: Build and publish to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/pydantic-super-model/
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python and Poetry
        uses: ./.github/actions/setup-python-poetry
        with:
          post_setup_command: "poetry install --no-interaction --no-root"

      - name: Bump version
        id: bump
        shell: bash
        run: |
          set -euo pipefail
          current=$(poetry version --short)
          poetry version "${{ github.event.inputs.version_increment }}"
          newv=$(poetry version --short)
          echo "current=$current" >> "$GITHUB_OUTPUT"
          echo "new=$newv" >> "$GITHUB_OUTPUT"
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git commit -am "chore(release): bump version to $newv"
          git tag "$newv"

      - name: Push changes and tags
        shell: bash
        run: |
          git push origin HEAD
          git push origin --tags

      - name: Build package
        run: poetry build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "${{ steps.bump.outputs.new }}"
          name: "Release v${{ steps.bump.outputs.new }}"
          draft: false
          prerelease: false
          files: |
            dist/*
